# 抽屉原理

## 概述
桌上有十个苹果，要把这十个苹果放到九个抽屉里，无论怎样放，我们会发现至少会有一个抽屉里面至少放两个苹果。这一现象就是我们所说的“抽屉原理”。 
抽屉原理的一般含义为：“如果每个抽屉代表一个集合，每一个苹果就可以代表一个元素，假如有n+1个元素放到n个集合中去，其中必定有一个集合里至少有两个元素。” 
抽屉原理有时也被称为鸽巢原理。它是组合数学中一个重要的原理。

---

## 习题一、Halloween treats Hdu-1808

题目连接:https://vjudge.net/contest/284719#problem/A

### 题目描述

这道题的大致意思是，给出$n$个邻居，第$i$个邻居有$a_i$块糖果,你现在需要选定一些邻居去拜访,当你拜访一个邻居时,这个邻居会给予你$a_i$块糖果.
你需要令你手里的糖果数是$c$的倍数.输出你拜访邻居的方案.
值得注意的是:$c \le n$,这是一个非常重要的条件.

### 题解

如果我们暴力去枚举判定的话,时间复杂度非常高,应该是$n2^n$级别的,显然无法通过这道题.因此我们只能通过挖掘这道题目的性质来做啦.

如果我们把邻居们铺成一列,并且对它们求一个前缀和数组.我们继续思考,是否可以通过选取其中的一段区间的和来达到目标呢?

假如我们选取的区间$[i+1,j]$满足这样的条件,那么意味着$(sum(j) - sum(i)) \% c == 0$,也就是说$sum(j) \equiv sum(i) 在(\%c)的意义下$.

那么问题看似出现了转机,我们可以让所有的前缀和$sum(i)$对$c$取模,那么得到的结果必然属于$[0,c-1]$之间,如果存在一个前缀和在模$c$的意义下等于$0$

那么就可以直接输出答案了,否则的话取模结果就只剩$c-1$种情况了,我们看成是$c-1$个盒子,而我们的前缀和个数为$n \ge c \gt c-1$,根据抽屉原理

必然有至少两个前缀和同余,于是最后需要选定的区间就介于这两个前缀和中间了.

### 代码

略

---

## 习题二、吃糖果 Hdu-1205

题目链接:https://vjudge.net/contest/284719#problem/B

### 题目描述

一个人手里有好几堆糖果,每一堆中的糖果种类是一样的,不同堆得糖果数目是不相同的.

这个人吃糖果时有个特殊的癖好，就是不喜欢将一样的糖果放在一起吃，喜欢先吃一种，下一次吃另一种.

请你帮忙判断一下,他是否有办法将所有的糖果都吃完.

### 题解

我们这样思考,我们将吃糖果的过程按照时间先后顺序排成一个序列的时候,那么必然相邻的两颗糖果他们的种类是不一样的.

而其中最重要的那种糖果就是数量最多的这种糖果,我们只需要令这类糖果在序列中不相邻,那么剩下的糖果都很好办,可以依次往这类糖果中间添加即可,相当于使用隔板.

举个栗子:

5a 2b 2c

先了列出a糖果的序列:

a a a a a

使得a糖果不相邻,就要用剩下的糖果去填补,可知,剩下的糖果数目一定要大于等于MAX-1.

a b a b a c a c

这样就可以了.

再举个栗子:

5a 4b 3c

这样怎么办呢?

照旧,先把a糖果的序列列出来:

a a a a a

使得a糖果不相邻,就要用剩下的糖果去填补:

a b a b a b a b

但是c糖果还没用怎么办呢?,可以紧紧跟随b糖果放置呀,相当于加厚隔板.

a bc a bc a bc a b a

再再举个栗子:

5a 2b 2c 3d 1e

a a a a a

a b a b a c a c

a bd a bd a cd a ce a

...

看明白了吧.....

所以,如果糖果总数$sum$,减去种类最多的糖果数$MAX$,得到的结果不小于$MAX-1$(也就是隔板的数量),那必然可行.


### 代码

略

---

## Harmony Forever HDU-3303
题目链接:https://vjudge.net/contest/284719#problem/C

### 题目描述

就是对一个集合，有两种操作：

1、将某个元素加入集合中；

2、一个是问当前集合中mod y 最小的数，如果有多个，输出最后加入的那个元素，要求的是输出他们加入集合的时间。

### 题解

根据抽屉原理,$[0,M-1]$之间的所有数在\$%M$的意义下都是不同的.

那么可以利用这个性质将要查找所有区间分成$[0,Y-1],[Y,2*Y-1],[2*Y,3*Y-1]....$,直到区间覆盖了所有的数.

然后我们只需要找各个区间的最小值就够了,这个可以用线段树来解决.找到每个区间的最小值之后,再将各个区间的最小值取模进行比较.

注意，这里虽然利用线段树可以解决问题，但如果说要查找的Y很小，那么分得的区间会很多，这样查找效率就会低，不如直接查找，所以这里又有一个小技巧，当Y比较小时，可以直接线性查找

### 代码

略

---

## Gopher II POJ-2536

### 题目描述


